<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yuxuanの博客</title>
  
  <subtitle>yuxuanの博客</subtitle>
  <link href="https://fyxemmmm.github.io/atom.xml" rel="self"/>
  
  <link href="https://fyxemmmm.github.io/"/>
  <updated>2021-10-20T05:58:20.029Z</updated>
  <id>https://fyxemmmm.github.io/</id>
  
  <author>
    <name>yuxuan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>limit &amp; offset 为什么会慢</title>
    <link href="https://fyxemmmm.github.io/2021/10/19/mysql-fen-ye-cha-xun/"/>
    <id>https://fyxemmmm.github.io/2021/10/19/mysql-fen-ye-cha-xun/</id>
    <published>2021-10-19T11:49:06.000Z</published>
    <updated>2021-10-20T05:58:20.029Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;从一个问题说起&quot;&gt;&lt;a href=&quot;#从一个问题说起&quot; class=&quot;headerlink&quot; title=&quot;从一个问题说起&quot;&gt;&lt;/a&gt;从一个问题说起&lt;/h2&gt;&lt;p&gt;五年前发现分页场景下，mysql请求速度非常慢。数据量只有10w的情况下，select xx</summary>
        
      
    
    
    
    <category term="mysql" scheme="https://fyxemmmm.github.io/categories/mysql/"/>
    
    
    <category term="limit" scheme="https://fyxemmmm.github.io/tags/limit/"/>
    
    <category term="offset" scheme="https://fyxemmmm.github.io/tags/offset/"/>
    
    <category term="分页" scheme="https://fyxemmmm.github.io/tags/%E5%88%86%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>简单说说「跨域请求」</title>
    <link href="https://fyxemmmm.github.io/2021/10/14/cors/"/>
    <id>https://fyxemmmm.github.io/2021/10/14/cors/</id>
    <published>2021-10-14T09:48:27.000Z</published>
    <updated>2021-10-20T05:58:36.656Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;“前端如何解决跨域问题？” 这个是前段在知乎看到的一个提问，这几乎是做前端都会遇到的一个问题，产生的情况可能会很多，解决一个问题还是要先了解下为什么会产生这样问题，学习最好的方法就是结合一些实际的案例来学习，理解和掌握也会更加的深刻，本文结合 Node.js 写一些</summary>
        
      
    
    
    
    <category term="协议" scheme="https://fyxemmmm.github.io/categories/%E5%8D%8F%E8%AE%AE/"/>
    
    
    <category term="http" scheme="https://fyxemmmm.github.io/tags/http/"/>
    
    <category term="cors" scheme="https://fyxemmmm.github.io/tags/cors/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes nfs-provider</title>
    <link href="https://fyxemmmm.github.io/2021/10/09/k8s-nfs-provider/"/>
    <id>https://fyxemmmm.github.io/2021/10/09/k8s-nfs-provider/</id>
    <published>2021-10-09T09:38:26.000Z</published>
    <updated>2021-10-19T11:51:19.654Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;一、什么是StorageClass&quot;&gt;&lt;a href=&quot;#一、什么是StorageClass&quot; class=&quot;headerlink&quot; title=&quot;一、什么是StorageClass&quot;&gt;&lt;/a&gt;一、什么是StorageClass&lt;/h3&gt;&lt;pre</summary>
        
      
    
    
    
    <category term="kubernetes" scheme="https://fyxemmmm.github.io/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="https://fyxemmmm.github.io/tags/kubernetes/"/>
    
    <category term="StorageClass" scheme="https://fyxemmmm.github.io/tags/StorageClass/"/>
    
  </entry>
  
  <entry>
    <title>golang pprof 实操</title>
    <link href="https://fyxemmmm.github.io/2021/10/03/pprof/"/>
    <id>https://fyxemmmm.github.io/2021/10/03/pprof/</id>
    <published>2021-10-03T14:24:01.000Z</published>
    <updated>2021-10-03T14:36:58.423Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;pprof是一个好工具，但掌握好工具的正确用法，才能发挥好工具的威力，不然就算你手里有屠龙刀，也成不了天下第一，本文就是带你用pprof定位内存泄露问题。&lt;/p&gt;
&lt;p&gt;关于Go的内存泄露有这么一句话不知道你听过没有：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;10次内存泄露</summary>
        
      
    
    
    
    <category term="golang" scheme="https://fyxemmmm.github.io/categories/golang/"/>
    
    
    <category term="pprof" scheme="https://fyxemmmm.github.io/tags/pprof/"/>
    
    <category term="性能诊断" scheme="https://fyxemmmm.github.io/tags/%E6%80%A7%E8%83%BD%E8%AF%8A%E6%96%AD/"/>
    
  </entry>
  
  <entry>
    <title>Linux syscall 原理</title>
    <link href="https://fyxemmmm.github.io/2021/09/30/linux-syscall-yuan-li/"/>
    <id>https://fyxemmmm.github.io/2021/09/30/linux-syscall-yuan-li/</id>
    <published>2021-09-30T14:00:45.000Z</published>
    <updated>2021-10-03T14:34:26.928Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;一、Syscall意义&quot;&gt;&lt;a href=&quot;#一、Syscall意义&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="操作系统" scheme="https://fyxemmmm.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="系统调用" scheme="https://fyxemmmm.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Rust 核心概念</title>
    <link href="https://fyxemmmm.github.io/2021/09/26/rust-suo-you-quan/"/>
    <id>https://fyxemmmm.github.io/2021/09/26/rust-suo-you-quan/</id>
    <published>2021-09-26T13:44:34.000Z</published>
    <updated>2021-10-19T10:50:37.658Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;1-前言概述&quot;&gt;&lt;a href=&quot;#1-前言概述&quot; class=&quot;headerlink&quot; title=&quot;1. 前言概述&quot;&gt;&lt;/a&gt;1.</summary>
        
      
    
    
    
    <category term="rust" scheme="https://fyxemmmm.github.io/categories/rust/"/>
    
    
    <category term="所有权" scheme="https://fyxemmmm.github.io/tags/%E6%89%80%E6%9C%89%E6%9D%83/"/>
    
    <category term="借用" scheme="https://fyxemmmm.github.io/tags/%E5%80%9F%E7%94%A8/"/>
    
    <category term="引用" scheme="https://fyxemmmm.github.io/tags/%E5%BC%95%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>golang 安全计数</title>
    <link href="https://fyxemmmm.github.io/2021/09/19/go-yu-yan-shi-xian-an-quan-ji-shu-de-ruo-gan-chong-fang-fa/"/>
    <id>https://fyxemmmm.github.io/2021/09/19/go-yu-yan-shi-xian-an-quan-ji-shu-de-ruo-gan-chong-fang-fa/</id>
    <published>2021-09-19T05:04:54.000Z</published>
    <updated>2021-09-19T05:07:18.416Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;本文是一篇如何用 goroutine-safe 的方式实现计数器的方法汇总。&lt;/p&gt;
&lt;h3 id=&quot;不要这样做&quot;&gt;&lt;a href=&quot;#不要这样做&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="golang" scheme="https://fyxemmmm.github.io/categories/golang/"/>
    
    
    <category term="安全计数" scheme="https://fyxemmmm.github.io/tags/%E5%AE%89%E5%85%A8%E8%AE%A1%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>mysql 索引下推</title>
    <link href="https://fyxemmmm.github.io/2021/09/15/mysql-suo-yin-xia-tui/"/>
    <id>https://fyxemmmm.github.io/2021/09/15/mysql-suo-yin-xia-tui/</id>
    <published>2021-09-15T04:59:58.000Z</published>
    <updated>2021-09-19T05:02:28.552Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;strong&gt;回表操作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于数据库来说，只要涉及到索引，必然绕不过去回表操作。当然这也是我们今天所讲内容的前置基础。&lt;/p&gt;
&lt;p&gt;说到回表，我们需要从索引开始说起。别担心，不会长篇大论，这里只是简单讲下主键索引与普通索引，目的是让大家对回</summary>
        
      
    
    
    
    <category term="mysql" scheme="https://fyxemmmm.github.io/categories/mysql/"/>
    
    
    <category term="索引下推" scheme="https://fyxemmmm.github.io/tags/%E7%B4%A2%E5%BC%95%E4%B8%8B%E6%8E%A8/"/>
    
  </entry>
  
  <entry>
    <title>golang string与bytes的转换</title>
    <link href="https://fyxemmmm.github.io/2021/09/11/golang-string-bytes-mi-mi/"/>
    <id>https://fyxemmmm.github.io/2021/09/11/golang-string-bytes-mi-mi/</id>
    <published>2021-09-11T06:26:56.000Z</published>
    <updated>2021-09-19T04:36:51.194Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;byte类型&quot;&gt;&lt;a href=&quot;#byte类型&quot; class=&quot;headerlink&quot; title=&quot;byte类型&quot;&gt;&lt;/a&gt;byte类型&lt;/h2&gt;&lt;p&gt;我们看一下官方对&lt;code&gt;byte&lt;/code&gt;的定义：&lt;/p&gt;
&lt;pre</summary>
        
      
    
    
    
    <category term="golang" scheme="https://fyxemmmm.github.io/categories/golang/"/>
    
    
    <category term="golang" scheme="https://fyxemmmm.github.io/tags/golang/"/>
    
    <category term="string" scheme="https://fyxemmmm.github.io/tags/string/"/>
    
  </entry>
  
  <entry>
    <title>Linux の 文件系统</title>
    <link href="https://fyxemmmm.github.io/2021/09/09/linux-wen-jian-xi-tong-mi-mi/"/>
    <id>https://fyxemmmm.github.io/2021/09/09/linux-wen-jian-xi-tong-mi-mi/</id>
    <published>2021-09-09T15:50:09.000Z</published>
    <updated>2021-09-09T16:11:55.610Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;文件系统&quot;&gt;&lt;a href=&quot;#文件系统&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="操作系统" scheme="https://fyxemmmm.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="操作系统" scheme="https://fyxemmmm.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="文件系统" scheme="https://fyxemmmm.github.io/tags/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="inode" scheme="https://fyxemmmm.github.io/tags/inode/"/>
    
  </entry>
  
  <entry>
    <title>图解「进程间通讯」</title>
    <link href="https://fyxemmmm.github.io/2021/09/07/jie-du-jin-cheng-jian-tong-xun/"/>
    <id>https://fyxemmmm.github.io/2021/09/07/jie-du-jin-cheng-jian-tong-xun/</id>
    <published>2021-09-07T15:37:44.000Z</published>
    <updated>2021-09-19T04:50:15.358Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;开场小故事&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    <category term="操作系统" scheme="https://fyxemmmm.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="进程" scheme="https://fyxemmmm.github.io/tags/%E8%BF%9B%E7%A8%8B/"/>
    
    <category term="通讯" scheme="https://fyxemmmm.github.io/tags/%E9%80%9A%E8%AE%AF/"/>
    
  </entry>
  
  <entry>
    <title>读懂oauth协议</title>
    <link href="https://fyxemmmm.github.io/2021/09/06/oauth/"/>
    <id>https://fyxemmmm.github.io/2021/09/06/oauth/</id>
    <published>2021-09-06T15:10:37.000Z</published>
    <updated>2021-09-09T16:10:51.921Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;今天，我想登陆豆瓣，看看电影评论，陶冶陶冶情操。&lt;/p&gt;
&lt;p&gt;但是，我从来没注册过豆瓣账号，而我又懒得再注册一个，怎么办呢？&lt;/p&gt;
&lt;p&gt;我打开豆瓣的官网，笑了，原来豆瓣早就为我这种懒人想到了办法。&lt;/p&gt;
&lt;h2 id=&quot;懒人三步&quot;&gt;&lt;a href=&quot;#懒人三步&quot;</summary>
        
      
    
    
    
    <category term="协议" scheme="https://fyxemmmm.github.io/categories/%E5%8D%8F%E8%AE%AE/"/>
    
    
    <category term="oauth" scheme="https://fyxemmmm.github.io/tags/oauth/"/>
    
    <category term="单点登录" scheme="https://fyxemmmm.github.io/tags/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>解读 「事务消息」</title>
    <link href="https://fyxemmmm.github.io/2021/09/04/shi-wu-xiao-xi/"/>
    <id>https://fyxemmmm.github.io/2021/09/04/shi-wu-xiao-xi/</id>
    <published>2021-09-04T05:37:57.000Z</published>
    <updated>2021-09-04T05:55:35.386Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;还不知道事务消息吗？这篇文章带你全面扫盲！&quot;&gt;&lt;a href=&quot;#还不知道事务消息吗？这篇文章带你全面扫盲！&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="分布式" scheme="https://fyxemmmm.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
    <category term="分布式事务" scheme="https://fyxemmmm.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>golang [ 逃逸分析 ]</title>
    <link href="https://fyxemmmm.github.io/2021/09/02/golang-tao-yi-fen-xi/"/>
    <id>https://fyxemmmm.github.io/2021/09/02/golang-tao-yi-fen-xi/</id>
    <published>2021-09-01T16:46:00.000Z</published>
    <updated>2021-09-02T16:59:39.447Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;Go 语言较之 C 语言一个很大的优势就是自带 GC 功能，可 GC 并不是没有代价的。写 C</summary>
        
      
    
    
    
    <category term="golang" scheme="https://fyxemmmm.github.io/categories/golang/"/>
    
    
    <category term="golang" scheme="https://fyxemmmm.github.io/tags/golang/"/>
    
    <category term="内存管理" scheme="https://fyxemmmm.github.io/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>一文带你搞懂 golang channel 实现原理</title>
    <link href="https://fyxemmmm.github.io/2021/09/01/channel-shi-xian-yuan-li/"/>
    <id>https://fyxemmmm.github.io/2021/09/01/channel-shi-xian-yuan-li/</id>
    <published>2021-08-31T16:11:55.000Z</published>
    <updated>2021-09-19T04:31:56.705Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Section1-channel使用实例&quot;&gt;&lt;a href=&quot;#Section1-channel使用实例&quot; class=&quot;headerlink&quot; title=&quot;Section1 channel使用实例&quot;&gt;&lt;/a&gt;Section1</summary>
        
      
    
    
    
    <category term="golang" scheme="https://fyxemmmm.github.io/categories/golang/"/>
    
    
    <category term="golang" scheme="https://fyxemmmm.github.io/tags/golang/"/>
    
    <category term="channel" scheme="https://fyxemmmm.github.io/tags/channel/"/>
    
  </entry>
  
  <entry>
    <title>golang [ 内存管理 ]</title>
    <link href="https://fyxemmmm.github.io/2021/08/27/golang-nei-cun-guan-li/"/>
    <id>https://fyxemmmm.github.io/2021/08/27/golang-nei-cun-guan-li/</id>
    <published>2021-08-27T13:41:26.000Z</published>
    <updated>2021-09-02T16:33:43.710Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;要搞明白 Go 语言的内存管理，就必须先理解操作系统以及机器硬件是如何管理内存的。因为 Go</summary>
        
      
    
    
    
    <category term="golang" scheme="https://fyxemmmm.github.io/categories/golang/"/>
    
    
    <category term="golang" scheme="https://fyxemmmm.github.io/tags/golang/"/>
    
    <category term="内存管理" scheme="https://fyxemmmm.github.io/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>http2详解 [下]</title>
    <link href="https://fyxemmmm.github.io/2021/08/26/http2-xiang-jie-xia/"/>
    <id>https://fyxemmmm.github.io/2021/08/26/http2-xiang-jie-xia/</id>
    <published>2021-08-26T13:11:57.000Z</published>
    <updated>2021-08-29T07:16:04.765Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;8-http2的世界&quot;&gt;&lt;a href=&quot;#8-http2的世界&quot; class=&quot;headerlink&quot; title=&quot;8. http2的世界&quot;&gt;&lt;/a&gt;8.</summary>
        
      
    
    
    
    <category term="协议" scheme="https://fyxemmmm.github.io/categories/%E5%8D%8F%E8%AE%AE/"/>
    
    
    <category term="http2" scheme="https://fyxemmmm.github.io/tags/http2/"/>
    
  </entry>
  
  <entry>
    <title>http2详解 [中]</title>
    <link href="https://fyxemmmm.github.io/2021/08/25/http2-xiang-jie-zhong/"/>
    <id>https://fyxemmmm.github.io/2021/08/25/http2-xiang-jie-zhong/</id>
    <published>2021-08-25T13:01:22.000Z</published>
    <updated>2021-09-02T17:08:58.320Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;5-http2的基本概念&quot;&gt;&lt;a href=&quot;#5-http2的基本概念&quot; class=&quot;headerlink&quot; title=&quot;5. http2的基本概念&quot;&gt;&lt;/a&gt;5.</summary>
        
      
    
    
    
    <category term="协议" scheme="https://fyxemmmm.github.io/categories/%E5%8D%8F%E8%AE%AE/"/>
    
    
    <category term="http2" scheme="https://fyxemmmm.github.io/tags/http2/"/>
    
  </entry>
  
  <entry>
    <title>http2详解 [上]</title>
    <link href="https://fyxemmmm.github.io/2021/08/24/http2-xiang-jie-shang/"/>
    <id>https://fyxemmmm.github.io/2021/08/24/http2-xiang-jie-shang/</id>
    <published>2021-08-24T12:50:50.000Z</published>
    <updated>2021-09-02T17:09:57.478Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;1-背景&quot;&gt;&lt;a href=&quot;#1-背景&quot; class=&quot;headerlink&quot; title=&quot;1. 背景&quot;&gt;&lt;/a&gt;1.</summary>
        
      
    
    
    
    <category term="协议" scheme="https://fyxemmmm.github.io/categories/%E5%8D%8F%E8%AE%AE/"/>
    
    
    <category term="http2" scheme="https://fyxemmmm.github.io/tags/http2/"/>
    
  </entry>
  
  <entry>
    <title>自签证书 &amp; 原理</title>
    <link href="https://fyxemmmm.github.io/2021/08/20/zi-qian-ca-zheng-shu/"/>
    <id>https://fyxemmmm.github.io/2021/08/20/zi-qian-ca-zheng-shu/</id>
    <published>2021-08-20T15:49:20.000Z</published>
    <updated>2021-09-02T16:28:40.779Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;自签ca证书，及颁发证书&quot;&gt;&lt;a href=&quot;#自签ca证书，及颁发证书&quot; class=&quot;headerlink&quot; title=&quot;自签ca证书，及颁发证书&quot;&gt;&lt;/a&gt;自签ca证书，及颁发证书&lt;/h1&gt;&lt;p&gt;cd /etc/pki/CA&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    <category term="加密与安全" scheme="https://fyxemmmm.github.io/categories/%E5%8A%A0%E5%AF%86%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="证书" scheme="https://fyxemmmm.github.io/tags/%E8%AF%81%E4%B9%A6/"/>
    
    <category term="ca" scheme="https://fyxemmmm.github.io/tags/ca/"/>
    
    <category term="自签" scheme="https://fyxemmmm.github.io/tags/%E8%87%AA%E7%AD%BE/"/>
    
  </entry>
  
</feed>
